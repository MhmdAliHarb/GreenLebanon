@page "/client-history"

@inject ITripGateway TripGateway
@inject AuthenticationStateProvider AuthenticationState

<div class="container mt-3 vh-75">
    <div class="card shadow-lg">
        <div class="card-header bg-special text-center text-white">
            <h4 class="mb-0">Your History</h4>
        </div>
        <div class="card-body">
            @if ( trips == null )
            {
                <div class="text-center">
                    <div class="spinner-border text-success" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else if ( trips.Any() )
            {
                <table class="table table-striped table-hover">
                    <thead class="table-sm">
                        <tr>
                            <th>From</th>
                            <th>To</th>
                            <th>Region</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach ( var trip in trips )
                        {
                            <tr>
                                <td>@trip.StartingPoint</td>
                                <td>@trip.Destination</td>
                                <td>@trip.Region</td>
                                <td>@trip.Status</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-warning text-center" role="alert">
                    No trips available.
                </div>
            }
        </div>
    </div>
</div>

<style>
    .container {
        max-width: 900px;
    }

    .card {
        border-radius: 10px;
        overflow: hidden;
    }

    .bg-special {
        background-color: #015023;
        color: white;
    }

    .table {
        margin-bottom: 0;
    }
</style>

@code {
    private List<TripForView> trips = [];

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState.GetAuthenticationStateAsync();
        string clientId = authState.User.Claims.FirstOrDefault(x => x.Type == "sub")?.Value;
        var response = await GetTripsAsync(clientId);
        trips.AddRange(response);
    }

    private async Task<List<TripForView>> GetTripsAsync( string clientId )
    {
        // Simulate fetching trips from an API or database
        return await TripGateway.GetAllTripsAsync(clientId);
    }
}

