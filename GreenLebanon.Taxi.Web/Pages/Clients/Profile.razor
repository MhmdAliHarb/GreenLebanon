@page "/profile"
@using GreenLebanon.Taxi.Web.Identity
@inject NavigationManager Navigation
@inject IAccountManagement AccountManagement 
<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Profile</h4>
            <button class="btn btn-danger btn-sm" @onclick="Logout">Log Out</button>
        </div>
        <div class="card-body">
            @if ( user == null ) {
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else {
                <dl class="row mb-4">
                    <dt class="col-sm-3">First Name:</dt>
                    <dd class="col-sm-9">@user.FirstName</dd>

                    <dt class="col-sm-3">Last Name:</dt>
                    <dd class="col-sm-9">@user.LastName</dd>

                    <dt class="col-sm-3">Phone Number:</dt>
                    <dd class="col-sm-9">@user.PhoneNumber</dd>

                    <dt class="col-sm-3">Address:</dt>
                    <dd class="col-sm-9">@user.Address</dd>
                </dl>
                <div class="text-center">
                    <button class="btn btn-warning me-2" @onclick="ViewHistory">View History</button>
                    <button class="btn btn-danger" @onclick="DeleteAccount">Delete Account</button>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .container {
        max-width: 600px;
    }

    .card {
        border-radius: 10px;
        overflow: hidden;
    }

    dt {
        font-weight: bold;
    }
</style>

@code {
    private UserProfile user;

    protected override async Task OnInitializedAsync() {
        user = await GetUserProfileAsync();
    }

    private async Task<UserProfile> GetUserProfileAsync() {
        // Simulate fetching user profile from a database
        await Task.Delay(1000); // Simulated delay

        return new UserProfile {
                FirstName = "Mohammad Ali",
                LastName = "Harb",
                PhoneNumber = "76 896 326",
                Address = "Beirut - Dahyeh - Kafaat"
            };
    }

    private void Logout() {
        // Logic to log out the user
    }

    private void ViewHistory() {
        Navigation.NavigateTo("client-history");
    }

    private void DeleteAccount() {
        // Logic to delete the user account
    }

    public class UserProfile {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string PhoneNumber { get; set; }
        public string Address { get; set; }
    }
}

