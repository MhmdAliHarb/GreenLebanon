@page "/drivers-list"


<PageTitle>Drivers</PageTitle>
@* 
<div class="container mt-5">
    <h2 class="text-center mb-4">Drivers</h2>

    @if (Drivers == null)
    {
        <div class="text-center">
            <button class="btn btn-primary" disabled>Loading Drivers...</button>
        </div>
    }
    else if (!Drivers.Any())
    {
        <div class="alert alert-warning text-center" role="alert">
            No drivers registered yet.
        </div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">First</th>
                    <th scope="col">Last</th>
                    <th scope="col">Phone Number</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var driver in Drivers)
                {
                    <tr>
                        <td>@driver.FirstName</td>
                        <td>@driver.LastName</td>
                        <td> @driver.PhoneNumber</td>
                        <td>
                            
                            <button class="btn btn-danger">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
 *@
@code {
    // private List<Shared.Requests.Driver> Drivers;
    // [Inject]
    // private IDriverGateway gateway { get; set; }
    // protected override async Task OnInitializedAsync()
    // {
    //     Drivers = await LoadDrivers();
    // }
    // private async Task<List<Shared.Requests.Driver>> LoadDrivers()
    // {
    //     var list = await gateway.GetAllDriversAsync();
    //     return list;
    // }
    private async Task AcceptDriver(int tripId)
    {
        // Logic to accept the trip
        // Reload trips after action
    }

    private async Task DeleteDriver(int tripId)
    {
        // Logic to delete the trip
        // Reload trips after action
    }
}

