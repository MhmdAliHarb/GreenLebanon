@page "/login"
@using GreenLebanon.Taxi.Web.Identity
@inject NavigationManager Navigation

@inject IAuthenticationGateway gateway

<div class="col-12 col-md-5 col-lg-4 align-items-center ">
    <div class="card card-shadow border-0 rounded-3 bg-green-gradient col-10 m-4 ">
        <div class="card-body p-4">
            <div class="row g-6">
                <div class="col-12">
                    <div class="text-center">
                        <h3 class="fw-bold fs-5 mb-2 text-white"> Sign In</h3>
                        <p class="text-white-50"> Login Into GreenTaxi WebAPP</p>
                    </div>
                </div>
            </div>

            <EditForm Model="Model" OnSubmit="Submit">
                <DataAnnotationsValidator />
                <div class="form-floating mb-4">
                    <InputText @bind-Value="Model.Username" type="text" class="form-control rounded-2 border-0" id="username" placeholder="" />
                    <label for="username"> Username</label>
                    <ValidationMessage For="() => Model.Username" />
                </div>
                <div class="form-floating mb-4">
                    <InputText @bind-Value="Model.Password" type="password" class="form-control rounded-2 border-0" id="password" placeholder="" />
                    <label for="password"> Password</label>
                    <ValidationMessage For="() => Model.Password" />
                </div>
                <div class="col-12 @(_errorList.Any() ? string.Empty : "d-none")">
                    <div class="alert alert-warning">
                        @foreach (var error in _errorList)
                        {
                            <span> @error</span>
                        }
                    </div>
                </div>
                <button type="submit" class="btn btn-outline-light btn-block btn-lg fs-6 fw-bolder py-3 w-100">Sign In</button>
            </EditForm>
        </div>
        <div class="text-center  mt-4">
            <p class="text-white ">
                Don't Have An Account
                <NavLink href="register" style="color:greenyellow">Sign up </NavLink>
            </p>
        </div>
    </div>
</div>

@code {
    private LoginDto? Model { get; set; }
    private string _errorList = string.Empty;

    protected override async Task OnInitializedAsync() => Model ??= new();

    private async Task Submit()
    {
        var loginDto = new LoginDto()
            {
                Username = Model.Username,
                Password = Model.Password
            };

        var result = await gateway.LoginAsync(loginDto);

        if (result.Succeeded)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            _errorList = result.ErrorList;
        }
    }

}
<style>
    .validation-message {
        color: yellow;
    }

    .invalid {
        outline: 3px solid yellow;
    }

    .bg-green-gradient {
        background-image: linear-gradient(180deg, #00760a 0%, #003323 90%);
    }
</style>
